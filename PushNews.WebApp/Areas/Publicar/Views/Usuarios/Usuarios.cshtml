@using PushNews.WebApp.Areas.Publicar.Models.UI
@using Txt = PushNews.WebApp.App_LocalResources
@using PushNews.WebApp.Models.UI

@{
    bool permisoModificar = User.IsInRole("ModificarUsuarios");
    bool permisoExportar = User.IsInRole("ExportarUsuarios");
    bool permisoAgregar = User.IsInRole("CrearUsuarios");

    var modeloCabecera = new CabeceraModel()
    {
        Icono = "clip-settings",
        BCSeccion = Txt.Secciones.Configuracion,
        BCModulo = Txt.Secciones.Usuarios,
        Titulo = Txt.Secciones.Usuarios,
        Subtitulo = Txt.Usuarios.Subtitulo,
        Recargar = true,
    };

    var modeloHerramientasInline = new HerramientasInlineModel( permisoModificar, false, new List<BotonGridModel>()
        {
            new BotonGridModel(Txt.Usuarios.CambiarClave, "fa fa-lock", "btCambiarClave", "btn btn-xs btn-taxiva")
        });

    BotonGridModel[] opExportar = permisoExportar
        ? new BotonGridModel[]
        {
            new BotonGridModel(Txt.Comun.Exportar, "fa fa-file-excel-o", "btExportar" )
        }
        : new BotonGridModel[0];

    var modeloToolbar = new GridToolbarModel(opExportar,
        new[] { "ApellidosNombre", "Nombre", "Apellidos", "Email", "PerfilNombre", "AplicacionesNombres" },
        Txt.Usuarios.Buscar, permisoAgregar);

    string textosJson = Json.Encode(
        new
        {
            confirmacionEliminarCuerpo = Txt.Usuarios.ConfirmacionEliminar,
            confirmacionNavegacion = Txt.Comun.ConfirmarNavegacion,
            confirmacionDesactivar = Txt.Usuarios.ConfirmacionDesactivar,
            confirmacionActivar = Txt.Usuarios.ConfirmacionActivar
        });
}

@{Html.RenderPartial("cabeceraModulo", modeloCabecera);}
@{Html.RenderPartial("DialogoConfirmacion", new DialogoConfirmacionModel
    { ModalID = "ConfirmacionUsuarios", Titulo = @Txt.Comun.ConfirmarActivarDesactivar });}
@{Html.RenderPartial("DialogoConfirmacion", new DialogoConfirmacionModel
    { ModalID = "DialogoConfirmacion", Titulo = @Txt.Comun.ConfirmarEliminacion });}
@{Html.RenderPartial("DialogoCambiarClave");}

<div class="row">
    <div class="col-xs-12">
        @{Html.RenderPartial("FormUsuarios");}
        <div class="contenedor-modulo" data-textos="@textosJson">
            @(Html.Kendo().Grid<PushNews.WebApp.Models.Usuarios.UsuarioGrid>()
                .Name("UsuariosGrid")
                .Columns(columns =>
                {
                    columns.Bound(c => c.Email);
                    columns.Bound(c => c.ApellidosNombre).MinScreenWidth(500);
                    columns.Bound(c => c.AplicacionesNombres).Filterable(false).Sortable(false)
                        .MinScreenWidth(800)
                        .ClientTemplate("#=app.listaEtiquetas(AplicacionesNombres.split(\", \"), 2)#");
                    columns.ForeignKey(c => c.PerfilID, (SelectList) ViewBag.Perfiles).Width(100).MinScreenWidth(800);
                    if (permisoModificar)
                    {
                        columns.Bound(c => c.Activo).Title(@Txt.Comun.Activo)
                            .Width(80)
                            .ClientTemplate(Html.Partial("ControlActivarDesactivar").ToString());
                    }
                    if (permisoModificar)
                    {
                        columns.Bound(c => c.UsuarioID).Title("").Filterable(false).Sortable(false)
                            .Width(80)
                            .ClientTemplate(Html.Partial("ComandosGrillaEditarEliminar", modeloHerramientasInline).ToString());
                    }
                })
                .ToolBar(tb => tb.Template(Html.Partial("GridToolbar", modeloToolbar).ToString()))
                .ConfigurarGrilla("UsuariosGrid", "Usuarios", m =>
                {
                    m.Id(e => e.UsuarioID);
                    m.Field(e => e.PerfilNombre);
                    m.Field(e => e.AplicacionesNombres).Editable(false);
                })
            )
        </div>
    </div>
</div>