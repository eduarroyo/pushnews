@*@using PushNews.WebApp.Areas.Publicar.Models.UI
@using Txt = PushNews.WebApp.App_LocalResources
@using PushNews.WebApp.Helpers
@using PushNews.WebApp.Models.UI

@{
    bool permisoModificar = User.IsInRole("ModificarGpss");
    bool permisoExportar = User.IsInRole("ExportarGpss");
    bool permisoAgregar = User.IsInRole("CrearGpss");
    bool permisoEliminar = User.IsInRole("EliminarGpss");

    var modeloCabecera = new CabeceraModel()
    {
        Icono = "clip-settings",
        BCSeccion = Txt.Secciones.Comunicaciones,
        BCModulo = Txt.Secciones.Gpss,
        Titulo = Txt.Secciones.Gpss,
        Subtitulo = Txt.Gpss.Subtitulo,
        UrlSeccion = "#/gpss",
        Recargar = true
    };

    var modeloHerramientasInline = new HerramientasInlineModel(
        permisoModificar, permisoEliminar);

    BotonGridModel[] opExportar = permisoExportar
        ? new BotonGridModel[]
        {
            new BotonGridModel(Txt.Comun.Exportar, "fa fa-file-excel-o", "btExportar" ),
            //new BotonGridModel(Txt.Comun.Exportar, "fa fa-file-pdf-o", "btExportarPdf"),
            //new BotonGridModel(Txt.Comun.Imprimir, "fa fa-print", "btImprimir" )
        }
        : new BotonGridModel[0];

    var modeloToolbar = new GridToolbarModel(opExportar,
        new[] { "Matricula", }, Txt.Gpss.Buscar, permisoAgregar);

    string textosJson = Json.Encode(
       new
       {
           confirmacionEliminarCuerpo = Txt.Gpss.ConfirmacionEliminar,
           confirmacionNavegacion = Txt.Comun.ConfirmarNavegacion,
           confirmacionActivar = Txt.Gpss.ConfirmacionActivar,
           confirmacionDesactivar = Txt.Gpss.ConfirmacionDesactivar
       });
}

@{Html.RenderPartial("cabeceraModulo", modeloCabecera);}
@{Html.RenderPartial("DialogoConfirmacion", new DialogoConfirmacionModel
    { ModalID = "ConfirmarActivarDesactivar", Titulo = @Txt.Comun.ConfirmarActivarDesactivar });}
@{Html.RenderPartial("DialogoConfirmacion", new DialogoConfirmacionModel
    { ModalID = "DialogoConfirmacion", Titulo = @Txt.Comun.ConfirmarEliminacion });}

<div class="row">
    <div class="col-xs-12">
        @{ Html.RenderPartial("FormGpss"); }
        <div class="contenedor-modulo" data-textos="@textosJson">
            @(Html.Kendo().Grid<PushNews.WebApp.Models.Gpss.GpsModel>()
                .Columns(columns =>
                {
                    columns.Bound(c => c.GpsApiID).Width(120);
                    columns.Bound(c => c.Api).Width(120);
                    columns.Bound(c => c.Matricula).Width(150);
                    columns.Bound(c => c.Estado).Width(150);
                    columns.Bound(c => c.Bateria).Width(150);
                    columns.Bound(c => c.Sensores).Width(200);
                    columns.Bound(c => c.UltimaLecturaFecha).Format("{0:G}").Width(200);
                    columns.Bound(c => c.UltimaPosicionFecha).Format("{0:G}").Width(200);
                    columns.Bound(c => c.UltimaPosicionDireccion).Width(200).ClientTemplate(
                    @"#if(UltimaPosicionLatitud !== null && UltimaPosicionLongitud !== null) {#
                        <a target='_blank' href='#= '" + ViewBag.UrlMapas + @"'.replace('{latitud}', UltimaPosicionLatitud.toFixed(6)).replace('{longitud}', UltimaPosicionLongitud.toFixed(6)) #'
                            title='#= UltimaPosicionLatitud #, #= UltimaPosicionLongitud #'>
                            #if(UltimaPosicionDireccion.length) {#
                                #= UltimaPosicionDireccion #
                            #} else {#
                                #= UltimaPosicionLatitud #, #= UltimaPosicionLongitud #
                            #}#
                        </a>
                    #} else {#
                        #=UltimaPosicionDireccion#
                    #}#"
                    );
                    if (permisoModificar)
                    {
                        columns.Bound(c => c.Activo).Title(@Txt.Comun.Activo)
                            .Width(90)
                            .ClientTemplate(Html.Partial("ControlActivarDesactivar").ToString());
                    }
                    columns.Bound(c => c.GpsID).Title("").Filterable(false).Sortable(false)
                        .Width(80)
                        .EditorTemplateName("ComandosGrillaEditarEliminarEdit")
                        .ClientTemplate(Html.Partial("ComandosGrillaEditarEliminarSinCompresion", modeloHerramientasInline).ToString());
                })
                .ToolBar(tb => tb.Template(Html.Partial("GridToolbar", modeloToolbar).ToString()))
                .ConfigurarGrilla("GpssGrid", "Gpss",
                    model => { model.Id(p => p.GpsID);  model.Field(p => p.Activo).DefaultValue(true); }
                )
                .Scrollable(sc => sc.Height("auto"))
            )
        </div>
    </div>
</div>*@