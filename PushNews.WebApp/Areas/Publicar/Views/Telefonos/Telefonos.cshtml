@using PushNews.WebApp.Areas.Publicar.Models.UI
@using Txt = PushNews.WebApp.App_LocalResources
@using PushNews.WebApp.Models.UI

@{
    bool permisoModificar = User.IsInRole("ModificarTelefonos");
    bool permisoExportar = User.IsInRole("ExportarTelefonos");
    bool permisoAgregar = User.IsInRole("CrearTelefonos");
    bool permisoEliminar = User.IsInRole("EliminarTelefonos");

    var modeloCabecera = new CabeceraModel()
    {
        Icono = "clip-settings",
        BCSeccion = Txt.Secciones.Comunicaciones,
        BCModulo = Txt.Secciones.Telefonos,
        Titulo = Txt.Secciones.Telefonos,
        Subtitulo = Txt.Telefonos.Subtitulo,
        UrlSeccion = "#/telefonos",
        Recargar = true
    };

    var modeloHerramientasInline = new HerramientasInlineModel(
        permisoModificar, permisoEliminar);

    BotonGridModel[] opExportar = permisoExportar
        ? new BotonGridModel[]
        {
            new BotonGridModel(Txt.Comun.Exportar, "fa fa-file-excel-o", "btExportar" ),
            //new BotonGridModel(Txt.Comun.Exportar, "fa fa-file-pdf-o", "btExportarPdf"),
            //new BotonGridModel(Txt.Comun.Imprimir, "fa fa-print", "btImprimir" )
        }
        : new BotonGridModel[0];

    var modeloToolbar = new GridToolbarModel(opExportar,
        new[] { "Numero", "Descripcion" }, Txt.Telefonos.Buscar, permisoAgregar);

    string textosJson = Json.Encode(
       new
       {
           confirmacionEliminarCuerpo = Txt.Telefonos.ConfirmacionEliminar,
           confirmacionNavegacion = Txt.Comun.ConfirmarNavegacion
       });
}

@{Html.RenderPartial("cabeceraModulo", modeloCabecera);}
@{Html.RenderPartial("DialogoConfirmacion", new DialogoConfirmacionModel
    { ModalID = "DialogoConfirmacion", Titulo = @Txt.Comun.ConfirmarEliminacion });}

<div class="row">
    <div class="col-xs-12">
        @{ Html.RenderPartial("FormTelefonos"); }
        <div class="contenedor-modulo" data-textos="@textosJson">
            @(Html.Kendo().Grid<PushNews.WebApp.Models.Telefonos.TelefonoModel>()
                .Columns(columns =>
                {
                    columns.Bound(c => c.Descripcion);
                    columns.Bound(c => c.Numero);
                    if (permisoModificar)
                    {
                        columns.Bound(c => c.Activo).Title(@Txt.Comun.Activo)
                            .Width(80)
                            .ClientTemplate(Html.Partial("ControlActivarDesactivar").ToString());
                    }
                    columns.Bound(c => c.TelefonoID).Title("").Filterable(false).Sortable(false)
                        .Width(80)
                        .EditorTemplateName("ComandosGrillaEditarEliminarEdit")
                        .ClientTemplate(Html.Partial("ComandosGrillaEditarEliminar", modeloHerramientasInline).ToString());
                })
                .ToolBar(tb => tb.Template(Html.Partial("GridToolbar", modeloToolbar).ToString()))
                .ConfigurarGrilla("TelefonosGrid", "Telefonos",
                    model => { model.Id(p => p.TelefonoID);  model.Field(p => p.Activo).DefaultValue(true); }
                )
            )
        </div>
    </div>
</div>