<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArtEntidad" xml:space="preserve">
    <value>la ruta</value>
  </data>
  <data name="Buscar" xml:space="preserve">
    <value>Buscar rutas</value>
  </data>
  <data name="ConfirmacionEliminar" xml:space="preserve">
    <value>Se va a eliminar la ruta</value>
  </data>
  <data name="Subtitulo" xml:space="preserve">
    <value>Gestión de rutas</value>
  </data>
  <data name="CabezaUltimaPosicionDireccion" xml:space="preserve">
    <value>Ubicación de la cabeza</value>
  </data>
  <data name="CabezaUltimaPosicionFecha" xml:space="preserve">
    <value>Fecha de datos de cabeza</value>
  </data>
  <data name="CabezaUltimaPosicionLatitud" xml:space="preserve">
    <value>Coordenadas de la cabeza (latitud)</value>
  </data>
  <data name="CabezaUltimaPosicionLongitud" xml:space="preserve">
    <value>Coordenadas de la cabeza (longitud)</value>
  </data>
  <data name="CalculoDistancia" xml:space="preserve">
    <value>Distancia total recorrida (km)</value>
  </data>
  <data name="CalculoTiempo" xml:space="preserve">
    <value>Tiempo transcurrido</value>
  </data>
  <data name="CalculoVelocidad" xml:space="preserve">
    <value>Velocidad media (m/h)</value>
  </data>
  <data name="ColaUltimaPosicionDireccion" xml:space="preserve">
    <value>Ubicación de la cola</value>
  </data>
  <data name="ColaUltimaPosicionFecha" xml:space="preserve">
    <value>Fecha de datos de cola</value>
  </data>
  <data name="ColaUltimaPosicionLatitud" xml:space="preserve">
    <value>Coordenadas de la cola (latitud)</value>
  </data>
  <data name="ColaUltimaPosicionLongitud" xml:space="preserve">
    <value>Coordenadas de la cola (longitud)</value>
  </data>
  <data name="Descripcion" xml:space="preserve">
    <value>Descripción</value>
  </data>
  <data name="EntradaEnCarreraOficial" xml:space="preserve">
    <value>Entrada en carrera oficial</value>
  </data>
  <data name="EntradaEnCarreraOficialLatitud" xml:space="preserve">
    <value>Coordenadas de entrada en carrera oficial (latitud)</value>
  </data>
  <data name="EntradaEnCarreraOficialLongitud" xml:space="preserve">
    <value>Coordenadas de entrada en carrera oficial (longitud)</value>
  </data>
  <data name="FinDescripcion" xml:space="preserve">
    <value>Descripción de fin</value>
  </data>
  <data name="FinFecha" xml:space="preserve">
    <value>Fecha de fin</value>
  </data>
  <data name="FinLatitud" xml:space="preserve">
    <value>Coordenadas de fin (latitud)</value>
  </data>
  <data name="FinLongitud" xml:space="preserve">
    <value>Coordenadas de fin (longitud)</value>
  </data>
  <data name="GpsCabeza" xml:space="preserve">
    <value>GPS de cabeza</value>
  </data>
  <data name="GpsCabezaApiID" xml:space="preserve">
    <value>ApiID del gps de cabeza</value>
  </data>
  <data name="GpsCabezaMatricula" xml:space="preserve">
    <value>Matrícula del gps de cabeza</value>
  </data>
  <data name="GpsCola" xml:space="preserve">
    <value>GPS de cola</value>
  </data>
  <data name="GpsColaApiID" xml:space="preserve">
    <value>ApiID del gps de cola</value>
  </data>
  <data name="GpsColaMatricula" xml:space="preserve">
    <value>Matrícula del gps de cola</value>
  </data>
  <data name="Hermandad" xml:space="preserve">
    <value>Hermandad</value>
  </data>
  <data name="InicioDescripcion" xml:space="preserve">
    <value>Descripción de inicio</value>
  </data>
  <data name="InicioFecha" xml:space="preserve">
    <value>Fecha de inicio</value>
  </data>
  <data name="InicioLatitud" xml:space="preserve">
    <value>Coordenadas de inicio (latitud)</value>
  </data>
  <data name="InicioLongitud" xml:space="preserve">
    <value>Coordenadas de inicio (longitud)</value>
  </data>
  <data name="SeccionIdentificacion" xml:space="preserve">
    <value>Identificación</value>
  </data>
  <data name="SeccionRecorrido" xml:space="preserve">
    <value>Recorrido</value>
  </data>
  <data name="SeleccioneGPSCola" xml:space="preserve">
    <value />
  </data>
  <data name="CarreraOficial" xml:space="preserve">
    <value>Carrera oficial</value>
  </data>
  <data name="DistanciaRecorrida" xml:space="preserve">
    <value>Distancia recorrida</value>
  </data>
  <data name="ErrorCapaMapaNoEncontrada" xml:space="preserve">
    <value>No se encontró la capa de mapa. Para que el script funcione requiere un div con id "mapa".</value>
  </data>
  <data name="Fin" xml:space="preserve">
    <value>Fin</value>
  </data>
  <data name="IglesiaDireccion" xml:space="preserve">
    <value>Dirección</value>
  </data>
  <data name="IglesiaNombre" xml:space="preserve">
    <value>Iglesia</value>
  </data>
  <data name="PatrocinadorDireccion" xml:space="preserve">
    <value>Dirección</value>
  </data>
  <data name="PatrocinadorFacebook" xml:space="preserve">
    <value>Facebook</value>
  </data>
  <data name="PatrocinadorTelefono" xml:space="preserve">
    <value>Teléfono</value>
  </data>
  <data name="PatrocinadorTwitter" xml:space="preserve">
    <value>Twitter</value>
  </data>
  <data name="PatrocinadorWeb" xml:space="preserve">
    <value>Web</value>
  </data>
  <data name="PosicionCola" xml:space="preserve">
    <value>Fin de cortejo</value>
  </data>
  <data name="PosicionCruzGuia" xml:space="preserve">
    <value>Cruz de guía</value>
  </data>
  <data name="Salida" xml:space="preserve">
    <value>Salida</value>
  </data>
  <data name="VelocidadMedia" xml:space="preserve">
    <value>Velocidad media</value>
  </data>
  <data name="CruzDeGuia" xml:space="preserve">
    <value>Cruz de guía</value>
  </data>
  <data name="FinDeCortejo" xml:space="preserve">
    <value>Fin de cortejo</value>
  </data>
  <data name="FinCarreraOficial" xml:space="preserve">
    <value>Fin de la carrera oficial</value>
  </data>
  <data name="InicioCarreraOficial" xml:space="preserve">
    <value>Inicio de la carrera oficial</value>
  </data>
  <data name="DomingoRamos" xml:space="preserve">
    <value>Domingo de Ramos</value>
  </data>
  <data name="DomingoResurreccion" xml:space="preserve">
    <value>Domingo de Resurrección</value>
  </data>
  <data name="FiltroTitulo" xml:space="preserve">
    <value>Filtrar hermandades</value>
  </data>
  <data name="HermandadesTodas" xml:space="preserve">
    <value>Todas las hermandades</value>
  </data>
  <data name="JuevesSanto" xml:space="preserve">
    <value>Jueves Santo</value>
  </data>
  <data name="LunesSanto" xml:space="preserve">
    <value>Lunes Santo</value>
  </data>
  <data name="MartesSanto" xml:space="preserve">
    <value>Martes Santo</value>
  </data>
  <data name="MiercolesSanto" xml:space="preserve">
    <value>Miércoles Santo</value>
  </data>
  <data name="SabadoSanto" xml:space="preserve">
    <value>Sábado Santo</value>
  </data>
  <data name="ViernesSanto" xml:space="preserve">
    <value>Viernes Santo</value>
  </data>
</root>